JS API
======

.. note:: Schematik currently provides a limited set of Javascript API, but these can be easily extended. Submit any new API request at `Issue Tracker <https://github.com/RishabhRawat/schematicGenerator/issues>`_

schematik
*********
This class represents the top level handle for creating any schematics.


**********
Properties 
**********

schematicInstance
#################
Handle to the underlying C++ instance, related C++ API can be accessed using this. 


diagramBlock
############
Handle to the svg div where the diagram is created


*********
Functions
*********

schematik(div)
##############
This is the constructor to the schematik class and the div parameter is the *id* of the svg block where the schematic is to be rendered

processYosysJson(jsonData)
##########################

Automatically processes a data generated by YosysJS to form a complete design. Look at `Yosys json <http://www.clifford.at/yosys/cmd_json.html>`_ for more details

getTerminalDirection(string)
############################
Returns a terminal direction enum from string. Possible values for input string are - "input", "output", "inout".

.. note:: This is only useful when using with topDesign.`addSystemTerminal`_ and module.`addTerminal` where you need to send a direction enum as a parameter 


doPlacement()
#############
Runs the placement algorithm on the topDesign instance

.. note:: This does not return anything, for retrieving the results of placement algorithm see `getPlacedModulesJson()`_
 

getPlacedModulesJson()
######################
Returns the results of the placement algorithm in the form of a JSON string.

.. note:: The string will need to be parsed to convert it into a Javascript object


doRouting()
###########
Runs the routing algorithm on the topDesign instance

.. note:: This does not return anything, for retrieving the results of placement algorithm see `getRoutedNetsJson()`_
.. warning:: Calling this function without running the placement (or completely specifying placement yourself can upset people :P)
.. error:: It can sometimes throw error when a suitable routing is not found, in such cases you might need to use a different placement for a possible solution to be found. I am currently working on guaranteeing a possible routing

getRoutedNetsJson()
###################
Returns the results of the routing algorithm in the form of a JSON string.

.. note:: The string will need to be parsed to convert it into a Javascript object

drawPlacement()
###############
Runs the placement algorithm and renders the result.
.. note:: All the rendering functions use snapsvg.js library


drawPlacement(placementData)
############################
Renders the placement result. 


drawRouting()
#############
Runs the routing algorithms and renders the result. 
.. note:: All the rendering functions use snapsvg.js library


drawRouting(routingData)
########################
Renders the routing result. 

